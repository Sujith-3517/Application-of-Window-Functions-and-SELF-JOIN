Analyzing Sales Data using Window Functions and SQL Joins in Oracle SQL



Task:
Consider a table called `sales` that contains the following columns:

- `order_id` (integer): unique identifier for each order.

- `product_id` (integer): unique identifier for each product.

- `customer_id` (integer): unique identifier for each customer.

- `order_date` (date): date when the order was placed.

- `quantity` (integer): quantity of the product ordered.

- `price` (numeric): price per unit of the product.



1. Use a SQL join to retrieve the order details along with the customer information for each order.

2. Write a query to calculate the total sales amount (`total_amount`) for each order by multiplying the `quantity` and `price` columns.

3. Use a window function to calculate the average order amount (`avg_order_amount`) for each customer, considering all their orders.

4. Write a query to find the top 5 customers with the highest average order amount.

5. Calculate the cumulative sum of the total sales amount (`cumulative_sales`) for each order, starting from the first order.



Deliverables:



1. `sales_analysis.sql` - The SQL script containing the queries to accomplish the tasks mentioned above.



Solution:

-- 1. SQL join to retrieve the order details along with customer information

SELECT s.order_id, s.product_id, s.customer_id, s.order_date, s.quantity, s.price, c.customer_name, c.email

FROM sales s

JOIN customers c ON s.customer_id = c.customer_id;



-- 2. Calculation of total sales amount for each order

SELECT order_id, quantity * price AS total_amount

FROM sales;



-- 3. Window function to calculate the average order amount for each customer

SELECT order_id, customer_id, quantity * price AS total_amount,

    AVG(quantity * price) OVER (PARTITION BY customer_id) AS avg_order_amount

FROM sales;



-- 4. Query to find the top 5 customers with the highest average order amount

SELECT customer_id, AVG(quantity * price) AS avg_order_amount

FROM sales

GROUP BY customer_id

ORDER BY avg_order_amount DESC

FETCH FIRST 5 ROWS ONLY;



-- 5. Calculation of cumulative sum of total sales amount for each order

SELECT order_id, quantity * price AS total_amount,

    SUM(quantity * price) OVER (ORDER BY order_date, order_id) AS cumulative_sales

FROM sales;